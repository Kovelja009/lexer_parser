//import section

import java_cup.runtime.*;
import java.io.*;

parser code
{:

   public static void main(String[] args)
   {
      try
	  {
		   FileReader file = new FileReader( args[0] );
		   Scanner scanner = new MPLexer( file );
		   MPParser mpParser = new MPParser( scanner );
		   mpParser.parse();
	  }
	  catch( Exception e )
	  {
		   System.out.println(e.getMessage());
	  }
   }
:};


//Terminal symbols

terminal ID, CONST, AND, OR, PLUS, MUL, MIN, DIV, MOD, ASSIGN, LESS, LESSE, GREAT, GREATE, EQ, NEQ,DOTCOMMA, LP,  RP,LV,RV, COMMA;
terminal in_the_beginning, real, _int, _char, _bool, read, write, _while, BEGIN, END, IF, ELSE, BREAK, CONTINUE, RETURN, STRING;


//Nonterminal symbols

non terminal PROGRAM, CODE, BLOCK, VarList, StmntList, Declare, Type, NameList, ArgExpression, Statement, Expression, AndExpression, Relation;
non terminal CHECK, Term, Factor;



//Grammar

PROGRAM ::= BEGIN CODE END
            {:
               System.out.println( "Redukcija po smeni 1." );
            :}
            | error CODE END
            {:
               System.out.println( "Keyword alpha missing.");
               System.out.close();
            :}
            | BEGIN error END
            {:
               System.out.println( "There are no code to execute.");
               System.out.close();
            :}
            | BEGIN CODE error
            {:
               System.out.println( "Keyword omega missing.");
               System.out.close();
            :}
            ;

CODE ::= in_the_beginning LP RP LV BLOCK RV
             {:
                System.out.println( "Redukcija po smeni 2." );
             :}
             | error LP RP LV BLOCK RV
              {:
                 System.out.println( "Keyword in_the_beginning missing." );
                System.out.close();

              :}
             | in_the_beginning error RP LV BLOCK RV
              {:
                 System.out.println( "Left parenthesis missing." );
                System.out.close();
              :}
             | in_the_beginning LP error LV BLOCK RV
              {:
                 System.out.println( "Right parenthesis missing." );
                System.out.close();
              :}
            | in_the_beginning LP RP error BLOCK RV
            {:
                System.out.println( "Left curly bracket missing." );
                System.out.close();
            :}
            | in_the_beginning LP RP LV BLOCK error
            {:
                System.out.println( "Right curly bracket missing." );
                System.out.close();
            :}
             ;

BLOCK ::= VarList StmntList
            {:
               System.out.println( "Redukcija po smeni 3." );
            :}
          | StmntList
            {:
               System.out.println( "Redukcija po smeni 4." );
            :}
          | VarList
            {:
               System.out.println( "Redukcija po smeni 5." );
            :}
          ;

VarList ::= VarList Declare
                {:
                   System.out.println( "Redukcija po smeni 6." );
                :}
                | Declare
                {:
                   System.out.println( "Redukcija po smeni 7." );

                :}
                ;

Declare ::= Type NameList DOTCOMMA
                {:
                   System.out.println( "Redukcija po smeni 8." );
                :}
                | Type NameList error
                {:
                   System.out.println( "Semicolon missing." );
                   System.out.close();
                :}
                | Type NameList ASSIGN ArgExpression DOTCOMMA
                {:
                   System.out.println( "Redukcija po smeni 9." );
                :}
                | Type error ASSIGN ArgExpression DOTCOMMA
                {:
                   System.out.println( "Name missing." );
                   System.out.close();
                :}
                | Type NameList ASSIGN ArgExpression error
                {:
                   System.out.println( "Semicolon missing." );
                   System.out.close();
                :}
                | Type NameList error ArgExpression DOTCOMMA
                {:
                   System.out.println( "Assignment missing." );
                   System.out.close();
                :}
                ;
NameList ::= NameList COMMA ID
                {:
                   System.out.println( "Redukcija po smeni 10." );
                :}
                | ID
                {:
                   System.out.println( "Redukcija po smeni 11." );
                :}
                ;

Type ::= real
                {:
                   System.out.println( "Redukcija po smeni 12." );
                :}
                | _int
                {:
                   System.out.println( "Redukcija po smeni 13." );
                :}
                | _char
                {:
                   System.out.println( "Redukcija po smeni 14." );
                :}
                | _bool
                {:
                   System.out.println( "Redukcija po smeni 15." );
                :}
                | STRING
                {:
                   System.out.println( "Redukcija po smeni 16." );
                :}
                ;

StmntList ::= StmntList Statement
                {:
                   System.out.println( "Redukcija po smeni 17." );
                :}
                | Statement
                {:
                   System.out.println( "Redukcija po smeni 18." );
                :}
                ;

Statement ::= IF LP Expression RP LV StmntList RV
                {:
                   System.out.println( "Redukcija po smeni 19." );
                :}
                | IF LP Expression RP error StmntList RV
                {:
                   System.out.println( "Left curly bracket missing." );
                     System.out.close();
                :}
                | IF error Expression RP LV StmntList RV
                {:
                   System.out.println( "Left parenthesis missing." );
                     System.out.close();
                :}
                | IF LP Expression error LV StmntList RV
                {:
                   System.out.println( "Right parenthesis missing." );
                     System.out.close();
                :}
                | IF LP Expression RP LV StmntList error
                {:
                   System.out.println( "Right curly bracket missing." );
                     System.out.close();
                :}
                | IF LP Expression RP LV StmntList RV ELSE LV StmntList RV
                {:
                   System.out.println( "Redukcija po smeni 20." );
                :}
                | IF error Expression RP LV StmntList RV ELSE LV StmntList RV
                {:
                   System.out.println( "Left parenthesis missing." );
                     System.out.close();
                :}
                | IF LP Expression error LV StmntList RV ELSE LV StmntList RV
                {:
                   System.out.println( "Right parenthesis missing." );
                     System.out.close();
                :}
                | IF LP Expression RP error StmntList RV ELSE LV StmntList RV
                {:
                   System.out.println( "Left curly bracket missing." );
                     System.out.close();
                :}
                | IF LP Expression RP LV StmntList error ELSE LV StmntList RV
                {:
                   System.out.println( "Right curly bracket missing." );
                     System.out.close();
                :}
                | IF LP Expression RP LV StmntList RV ELSE error StmntList RV
                {:
                   System.out.println( "Left curly bracket missing." );
                     System.out.close();
                :}
                | IF LP Expression RP LV StmntList RV ELSE LV StmntList error
                {:
                   System.out.println( "Right curly bracket missing." );
                     System.out.close();
                :}
                | _while LP Expression RP LV StmntList RV
                {:
                   System.out.println( "Redukcija po smeni 21." );
                :}
                | _while LP Expression RP error StmntList RV
                {:
                   System.out.println( "Left curly bracket missing." );
                    System.out.close();
                :}
                | _while LP Expression RP LV StmntList error
                {:
                   System.out.println( "Right curly bracket missing." );
                    System.out.close();
                :}
                | BREAK DOTCOMMA
                {:
                   System.out.println( "Redukcija po smeni 22." );
                :}
                | CONTINUE DOTCOMMA
                {:
                   System.out.println( "Redukcija po smeni 23." );
                :}
                | CONTINUE error
                {:
                   System.out.println( "Missing ';'" );
                    System.out.close();
                :}
                | RETURN Expression DOTCOMMA
                {:
                   System.out.println( "Redukcija po smeni 24." );
                :}
                | RETURN Expression error
                {:
                   System.out.println( "Missing ';'");
                    System.out.close();
                :}
                | RETURN ArgExpression DOTCOMMA
                {:
                   System.out.println( "Redukcija po smeni 25." );
                :}
                | RETURN ArgExpression error
                {:
                   System.out.println( "Missing ';'" );
                    System.out.close();
                :}
                | read LP NameList RP DOTCOMMA
                {:
                   System.out.println( "Redukcija po smeni 26." );
                :}

                | read LP NameList RP error
                {:
                   System.out.println( "Missing ';'" );
                    System.out.close();
                :}
                | write LP NameList RP DOTCOMMA
                {:
                   System.out.println( "Redukcija po smeni 28." );
                :}
                | write LP NameList RP error
                {:
                   System.out.println( "Missing ';'" );
                    System.out.close();
                :}
                ;

Expression ::= Expression OR AndExpression
                {:
                   System.out.println( "Redukcija po smeni 29." );
                :}
                | AndExpression
                {:
                   System.out.println( "Redukcija po smeni 30." );
                :}
                | Expression error AndExpression
                {:
                   System.out.println( "Missing 'or'" );
                    System.out.close();
                :}
                | error
                {:
                   System.out.println( "Invalid expression" );
                    System.out.close();
                :}
                ;

AndExpression ::= AndExpression AND Relation
                {:
                   System.out.println( "Redukcija po smeni 31." );
                :}
                | Relation
                {:
                   System.out.println( "Redukcija po smeni 32." );
                :}
                ;

Relation ::= ArgExpression CHECK ArgExpression
                {:
                   System.out.println( "Redukcija po smeni 33." );
                :}
                | ArgExpression error ArgExpression
                {:
                   System.out.println( "Missing checking" );
                    System.out.close();
                :}
                ;

CHECK ::= LESS
                {:
                   System.out.println( "Redukcija po smeni 34." );
                :}
                | LESSE
                {:
                   System.out.println( "Redukcija po smeni 35." );
                :}
                | GREAT
                {:
                   System.out.println( "Redukcija po smeni 36." );
                :}
                | GREATE
                {:
                   System.out.println( "Redukcija po smeni 37." );
                :}
                | EQ
                {:
                   System.out.println( "Redukcija po smeni 38." );
                :}
                | NEQ
                {:
                   System.out.println( "Redukcija po smeni 39." );
                :}
                ;

ArgExpression ::= ArgExpression PLUS Term
                {:
                   System.out.println( "Redukcija po smeni 40." );
                :}
                | ArgExpression MIN Term
                {:
                   System.out.println( "Redukcija po smeni 41." );
                :}
                | Term
                {:
                   System.out.println( "Redukcija po smeni 42." );
                :}
                ;

Term ::= Term MUL Factor
                {:
                   System.out.println( "Redukcija po smeni 43." );
                :}
                | Term DIV Factor
                {:
                   System.out.println( "Redukcija po smeni 44." );
                :}
                | Factor
                {:
                   System.out.println( "Redukcija po smeni 45." );
                :}
                | Term MOD Factor
                {:
                   System.out.println( "Redukcija po smeni 46." );
                :}
                ;

Factor ::= ID
                {:
                   System.out.println( "Redukcija po smeni 47." );
                :}
                | CONST
                {:
                   System.out.println( "Redukcija po smeni 48." );
                :}
                | LP ArgExpression RP
                {:
                   System.out.println( "Redukcija po smeni 49." );
                :}

               ;


	





